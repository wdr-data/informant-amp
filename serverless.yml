service: ${file(env.js):service}

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-central-1
  stage: ${file(env.js):getStage}
  environment: ${file(env.js):fetch}
  role: 'arn:aws:iam::#{AWS::AccountId}:role/hackingstudio/informant/hackingstudio-informant-amp-functions'
  deploymentBucket:
    name: ${self:service}-${self:provider.stage}-serverlessdeployment

functions:
  updateReport:
    handler: handler.updateReport
    events:
      - http:
          path: updateReport
          method: post
  deleteReport:
    handler: handler.deleteReport
    events:
      - http:
          path: deleteReport
          method: post
  updateIndex:
    handler: handler.updateIndex
    events:
      - http:
          path: updateIndex
          method: post

resources:
  Resources:
    HtmlBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${file(env.js):getBucketName}
        AccessControl: 'PublicRead'
        WebsiteConfiguration:
          IndexDocument: index.html

plugins:
  - serverless-offline
  - serverless-pseudo-parameters
